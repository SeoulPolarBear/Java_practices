검색

특정 "파일" 안에서 원하는 패턴을 검색

grep [option] pattern file

grep option
-i(ignore) : 리눅스 시스템은 대/소문자가 구분됨. 
	   -i 옵션부여해 주면 대/소문자를 무시함.(the => The, the 다찾음)

-w : 검색하는 패턴이 단어로만 되어 있는 것만 검색.(the => then, the them... 중에서 the만 추출한다.)
=> grep -w 'root' /etc/passwd 이때 단어는 구분자로 구분되는 단어들이다. 
(구분자 : 알파벳, 특수문자, 띄어쓰기 등  ex) /the/)
-v : grep으로 패턴을 검색하게 되면 해당 패턴이 포함되어 있는 라인을 출력해줌
	-v 옵션을 부여해주면 해당 패턴이 있는 라인을 제외한 나머지 라인 출력
grep 4 file => 4 / grep '^#' file 같은 걸로 주석문을 제외 시켜도 된다. 
grep -v 4 file => 12356789

-r : grep 명령어는 파일의 내용르 검색하는 거이기 때문에 grep 명령어의 argument는 file로 되어 있어야함.
	-r 옵션을 부여해주면 대상을 디렉토리로 확장할 수 있음. ( 파일명이 앞에도 나타난다.)

grep '4' ./ : 오류 (이유 파일에서 밖에 grep은 검색을 못한다.)
 grep -r '4' ./ : 오류 x (이유 dir로 범위를 확장 했기 때문이다..)

-n : 검색 결과를 출력할 때 해당 패턴이 존재하는 라인넘버 출력
grep -n '4' test : -n을 붙히면 해당 파일의 몇 번째 라인에 4가 있는지 출력해준다.


-A number => after : 해당 패턴을 검색 후에 밑으로 number 만큼 추가로 출력
-B number => before : 해당 패턴을 검색 후에 위로 number 만큼 추가로 출력
-C number => center : 해당 패턴을 검색 후에 위 아래로 number 만큼 추가로 출력

ex) grep -A 2 '4' test " 4가 있는 곳을 출력해주고 이후의 2줄을 더 출력해 준다.
------------------------------------------------------------------------------------------------------------------------------
grep 에서 주로 사용되는 정규표현식
^ (캐럿)  : ^pattern => 해당 패턴이 라인의 처음에 오는 것만 출력
$	: pattern$ => 해당 패턴이 라인의 맨 뒤에 오는 것만 출력
.	: 모든 한문자 (메타문자의 ?와 같은 의미, 띄어쓰기 포함) ex) a.c => abc,a1c,aAc, a c,...
*	: 앞에 나오는 한문자를 0번 이상 반복하라 ex) a5*b => ab, a5b, a55b, a555b, a5555b,...
+	: 앞에 나오는 한문자를 1번 이상 반복하라 ex) a5+b =>a5b, a55b, a555b, a5555b,...
.*	: zero or more( 아무것도 없는  것부터 무제한을 의미, 모든 한문자를 0번 이상 반복) - 메타문자에서 *과 똑같은 의미
[...]	: [] 안에 있는 문자를 하나씩 대입 ex) 1[abc]3 => 1a3, 1b3, 1c3
[^.....]	: [] 안에 있는 문자를 제외한 나머지 문자들 - 메타문자의 [!]와 같은 의미 ex) 1[^abc]3 => 1 3, 143, 1A3

grep 패턴을 일반적으로는 한번에 하나씩 밖에 검색할 수 밖에 없음.
(두개 이상의 pattern을 입력할 순 없다. ex) grep 'root' 'centos' passwd)
---------------------------------------------------------------------------------------------------------------------------
grep을 이용해서 다수의 패턴을 검색하는 방법

1. -e 옵션을 부여 : 패턴을 각각 부여해 주겠다.		-e : each
grep -e pattern 1 -e pattern2 -e pattern3 file명

2. egrep을 사용
egrep '(pattern1|pattern2|pattern3)' file ( pattern1 | pattern2 | pattern3 : 하면 띄어쓰기도 pattern으로 인식)
ex) egrep '(^root|^centos)' root
----------------------------------------------------------------------------------------------------------------------------
정규표현식에서 사용되는 특수문자를 일반 문자로 사용하는 방법

1. \(이스케이프 문자)를 이용

grep '\정규표현식문자' file명
ex) grep '\.' root

2. fgrep를 이용
fgrep '정규표현식문자' file (단점, '\^.*\$' 모두 일반문자가 되므로 전규표현식을 사용할 수 없다.)
ex)fgrep '.' root 

==========================================================================
여기서부터 보면 된다.

파일 및 디렉토리 검색
locate : DB 기반이므로 updatedb를 해야지만 찾을 수 있는 경우가 있다.
(파일의 이름만으로만 검색할 수 있다.)

find : 실시간 수행 조금 느리지만 해당 파일을 전부 찾아준다. (여러가지 옵션을 부여해서 찾을 수 있다.)
지정된 경로부터 하위 디렉토리까지 조건에 맞는 파일 검색
find [경로] [옵션] [argument] 동작

동작 부분
-print(default) : 검색된 파일을 출력
-ls(ls == -lid) : 검색된 파일을 자세하게 출력
-exec command {} \ : 검색된 파일을특정 명령어를 통해서 명령 즉시 실행
-ok command {} \ : 검색된 파일을특정 명령어를 통해서 명령 대화형으로 실행

find /root/ -name dirb 
find /root/ -name dirb -print
find /root/ -name dirb -ls
find /root/ -name dirb -exec ls -il {} \: => dirb의 내를 보여준다.
find /root/ -name dirb -exec ls -ild {} \: => dirb의 내를 제외한 디렉토리를 보여준다.
find /root/ -name "passwd" -ls
find /root/ -name "passwd" -ls -il {} \:





find / -name "etc"
find / -name "passwd*"



find./ -perm 111

find /-perm -111

find / -usr centos

find ./ -size +2G

find 크기 단위
c(default) -K - M -G










시스템에서 원하는 파일을 검색