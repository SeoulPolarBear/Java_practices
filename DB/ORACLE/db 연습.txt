--직원 수 제일 적은 회사에서 만드는 과자이름, 가격
select s_name, s_price from snack
where s_company = (select c_name from company
where s_employee = (select min(s_employee) from company))




--제일 비싼 과자를 만드는 회사는 어디에 있는지
select c_address from company
where c_name = (
select s_company from snack where s_price
=(select max(s_price) from snack)
);

--부천에 있는 회사에서 만드는 과자의 평균가
select avg(s_price) from snack 
where s_company = (
select c_name from company where c_location = '부천'
)
--평균가 이상의 과자를 만드는 회사의 이름, 위치
select c_name, c_location from company
where s_company in (select c_company from snack
where s_price >=(select avg(s_price) from snack)
)

--1. 음료테이블과 카페 테이블을 만들기

--음료테이블 : 음료 이름/ 가격/ 판매하는 카페의 이름
create table beverage(
b_name varchar2(10 char) primary key,
b_price number(4) not null,
b_cafe varchar2(10 char) not null,
constraint FK_beverage foreign key(b_cafe)
references cafe(c_name) on delete cascade
);
--카페테이블 : 카페이름 / 지역 / 좌석수
create table cafe(
c_name varchar2(10 char)primary key,
c_address varchar2(10 char) not null,
c_table number(3) not null
);

--[조건] 각 테이블에서 커피 이름, 카페 이름은 고유한 값을 갖는다.

--2. 조건에 맞는 테이블을 생성
--A카페는 서울에 위치하고, 좌석 100석, (아메리카노, 2000원), (라떼, 3000원), (녹차, 2500원)을 판매
insert into cafe value
--B카페는 판교에 위치하고, 좌석 80석, (홍차, 2500원), (스무디, 3000원), (에스프레소, 4000원)을 판매
--
--3. 쿼리문 작성
-- 평균가보다 비싼 음료는 몇 종류?
select count(b_name) from beverage
where b_price >=(select avg(b_price) from beverage);

-- 제일 싼 음료를 파는 카페의 이름?
select c_name from cafe
where c_name = (select b_cafe from beverage where b_price 
 = (select min(b_price) from beverage));

-- 서울에 있는 카페에서 만드는 음료 평균가?
select avg(b_price) from beverage 
where c_cafe in
(select c_name from cafe where c_address = '서울');

-- 좌석이 90석 이상인 카페에서 파는 음료의 이름 ?
select b_name from beverage 
where b_cafe in (select c_name from cafe 
where c_table >= 90 );

-- 평균가 이하인 음료의 이름 ?
select b_name from beverage 
where b_price <=(
select avg(b_price) from beverage
);

-- 가장 비싼 음료를 파는 카페는 어디에 있는지 ?
select c_address from cafe
where c_name = (select b_cafe from beverage
	where b_price =(
		select max(b_price) 
			from beverage)		
);



--select [distinct] [컬럼명], [컬럼명 as 별칭 |컬럼명 별칭], [연산자], [통계함수], ... 
-- from [테이블명]
--where
--group by
--having
--order by asc /desc
---------------------------------------------------------------------------------------------------------------
--요식업 프랜차이즈
CREATE TABLE FRANCHISE(
f_no number(3) primary key,
f_name varchar2(10 char) not null,
f_location varchar2(10 char) not null,
f_ceo number(3) not null,	--사장님의 번호
f_seat number(3) not null
);

create sequence franchise_seq;

--홍콩반점 판교점은 홍길동이 운영하고 100석
--홍콩반점 종로점은 김길동이 운영하고 80석
--한신포차 강남점은 홍길동이 운영하고 150석
--부천포차 판교점은 최길동이 운영하고 130석

--홍길동, 1990-03-01일생, 남자
--김길동, 1992-02-01일생, 남자
--홍길동, 1991-12-12일생, 남자
--최길동, 1989-09-01일생, 남자

create table ceo(
	c_no number(3) primary key,
	c_name varchar2(10 char) not null,
	c_birthday date not null,
	c_gender char(2 char) not null
);
create sequence ceo_seq;

insert into person values(ceo_seq.nextval,'최길동', to_date('1990-03-01', 'YYYY-MM-DD'), '남자');

--메뉴, 가격, 홍콩반점 판교역(100명)에서 파는
--메뉴당 5개 정도!

create table menu(
m_no number(2) primary key,
m_name varchar2(10 char) not null,
m_price number(5) not null,
m_f_no number(3) not null
);

create sequence menu_seq;
















